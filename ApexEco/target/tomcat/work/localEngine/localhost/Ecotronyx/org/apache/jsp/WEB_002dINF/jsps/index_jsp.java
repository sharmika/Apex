package org.apache.jsp.WEB_002dINF.jsps;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.AnnotationProcessor _jsp_annotationprocessor;

  public Object getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_annotationprocessor = (org.apache.AnnotationProcessor) getServletConfig().getServletContext().getAttribute(org.apache.AnnotationProcessor.class.getName());
  }

  public void _jspDestroy() {
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Apex - Ecotronyx</title>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery-1.8.2.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/ajax_chart.js\"></script>\r\n");
      out.write("<script type='text/javascript' src=\"js/date.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction show() {\r\n");
      out.write("\t\t//alert(\"ajax method calling\");\r\n");
      out.write("\t\tvar yearMonth = gettingDate();\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : 'POST',\r\n");
      out.write("\t\t\tcontentType : \"application/json\",\r\n");
      out.write("\t\t\turl : \"longterm?yearMonth=\" + yearMonth,\r\n");
      out.write("\t\t\tdata : {\r\n");
      out.write("\t\t\t//yearMonth : yearMonth\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tstatusCode : {\r\n");
      out.write("\t\t\t\t200 : function(msg, textStatus, jqXHR) {\r\n");
      out.write("\t\t\t\t\thandler(msg, textStatus, jqXHR);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t400 : function() {\r\n");
      out.write("\t\t\t\t\talert('400 status code! user error');\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t500 : function() {\r\n");
      out.write("\t\t\t\t\talert('500 status code! server error');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(XMLHttpRequest, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t\tAjaxError(XMLHttpRequest, textStatus, errorThrown);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction gettingDate() {\r\n");
      out.write("\t\tvar months = new Array(12);\r\n");
      out.write("\t\tmonths[0] = \"Jan\";\r\n");
      out.write("\t\tmonths[1] = \"Feb\";\r\n");
      out.write("\t\tmonths[2] = \"Mar\";\r\n");
      out.write("\t\tmonths[3] = \"Apr\";\r\n");
      out.write("\t\tmonths[4] = \"May\";\r\n");
      out.write("\t\tmonths[5] = \"Jun\";\r\n");
      out.write("\t\tmonths[6] = \"Jul\";\r\n");
      out.write("\t\tmonths[7] = \"Aug\";\r\n");
      out.write("\t\tmonths[8] = \"Sep\";\r\n");
      out.write("\t\tmonths[9] = \"Oct\";\r\n");
      out.write("\t\tmonths[10] = \"Nov\";\r\n");
      out.write("\t\tmonths[11] = \"Dec\";\r\n");
      out.write("\r\n");
      out.write("\t\tvar current_date = new Date();\r\n");
      out.write("\t\tmonth_value = current_date.getMonth();\r\n");
      out.write("\t\tday_value = current_date.getDate();\r\n");
      out.write("\t\tyear_value = current_date.getFullYear();\r\n");
      out.write("\t\treturn year_value + \"\" + 6;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction handler(msg, textStatus, jqXHR) {\r\n");
      out.write("\t\tvar status = jqXHR.status;\r\n");
      out.write("\t\t//alert(\"status \" + status);\r\n");
      out.write("\t\tif (status == 200) {\r\n");
      out.write("\t\t\t//alert(\"messages in handler class \" + msg);\r\n");
      out.write("\t\t\tdocument.getElementById('json').value = msg;\r\n");
      out.write("\t\t\t$(function() {\r\n");
      out.write("\t\t\t\thedgedBoolValue = true;\r\n");
      out.write("\t\t\t\tproposedBoolValue = true;\r\n");
      out.write("\t\t\t\tscheduledBoolValue = true;\r\n");
      out.write("\t\t\t\tavailableBoolValue = true;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar jsonVal = document.getElementById('json').value;\r\n");
      out.write("\t\t\t\t//alert(jsonVal);\r\n");
      out.write("\t\t\t\tvar obj = JSON.parse(jsonVal);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*line data*/\r\n");
      out.write("\t\t\t\tvar lineObj = JSON.stringify(obj[0].lineChartData);\r\n");
      out.write("\t\t\t\tvar lineData = JSON.parse(lineObj);\r\n");
      out.write("\t\t\t\tline = lineData;\r\n");
      out.write("\t\t\t\t//alert(\"line:\"+line);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*hedgedStackBarData*/\r\n");
      out.write("\t\t\t\tvar hedgedStackBarObj = JSON\r\n");
      out.write("\t\t\t\t\t\t.stringify(obj[1].hedgedStackBarData);\r\n");
      out.write("\t\t\t\tvar hedgedStackbarData = JSON.parse(hedgedStackBarObj);\r\n");
      out.write("\t\t\t\thedgedStackBar = hedgedStackbarData;\r\n");
      out.write("\t\t\t\tif (typeof (hedgedStackBar) == undefined\r\n");
      out.write("\t\t\t\t\t\t|| hedgedStackBar == null) {\r\n");
      out.write("\t\t\t\t\thedgedBoolValue = false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*proposedStackBarData*/\r\n");
      out.write("\t\t\t\tvar proposedStackBarObj = JSON\r\n");
      out.write("\t\t\t\t\t\t.stringify(obj[2].proposedStackBarData);\r\n");
      out.write("\t\t\t\tvar proposedStackbarData = JSON.parse(proposedStackBarObj);\r\n");
      out.write("\t\t\t\tproposedStackBar = proposedStackbarData;\r\n");
      out.write("\t\t\t\tif (typeof (proposedStackBar) == undefined\r\n");
      out.write("\t\t\t\t\t\t|| proposedStackBar == null) {\r\n");
      out.write("\t\t\t\t\tproposedBoolValue = false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*scheduledDemandStackBarData*/\r\n");
      out.write("\t\t\t\tvar scheduledDemandStackBarObj = JSON\r\n");
      out.write("\t\t\t\t\t\t.stringify(obj[3].scheduledDemandStackBarData);\r\n");
      out.write("\t\t\t\tvar scheduledDemandStackbarData = JSON\r\n");
      out.write("\t\t\t\t\t\t.parse(scheduledDemandStackBarObj);\r\n");
      out.write("\t\t\t\tscheduledDemandStackBar = scheduledDemandStackbarData;\r\n");
      out.write("\t\t\t\tif (typeof (scheduledDemandStackBar) == undefined\r\n");
      out.write("\t\t\t\t\t\t|| scheduledDemandStackBar == null) {\r\n");
      out.write("\t\t\t\t\tscheduledBoolValue = false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*availableDemandStackBarData*/\r\n");
      out.write("\t\t\t\tvar availableDemandStackBarObj = JSON\r\n");
      out.write("\t\t\t\t\t\t.stringify(obj[4].availableDemandStackBarData);\r\n");
      out.write("\t\t\t\tvar availableDemandStackbarData = JSON\r\n");
      out.write("\t\t\t\t\t\t.parse(availableDemandStackBarObj);\r\n");
      out.write("\t\t\t\tavailableDemandStackBar = availableDemandStackbarData;\r\n");
      out.write("\t\t\t\tif (typeof (availableDemandStackBar) == undefined\r\n");
      out.write("\t\t\t\t\t\t|| availableDemandStackBar == null) {\r\n");
      out.write("\t\t\t\t\tavailableBoolValue = false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*averages data*/\r\n");
      out.write("\t\t\t\tvar averagesObj = JSON.stringify(obj[5].averagesChartData);\r\n");
      out.write("\t\t\t\tvar averagesData = JSON.parse(averagesObj);\r\n");
      out.write("\t\t\t\taverages = averagesData;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*ranges data*/\r\n");
      out.write("\t\t\t\tvar rangesObj = JSON.stringify(obj[6].rangesChartData);\r\n");
      out.write("\t\t\t\tvar rangesData = JSON.parse(rangesObj);\r\n");
      out.write("\t\t\t\tranges = rangesData;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*chart xAxis data*/\r\n");
      out.write("\t\t\t\tvar chartXaxis = JSON.stringify(obj[7].chartdata);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar dataObj = eval(\"(\" + chartXaxis + \")\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar noOfDays = dataObj[\"No.of.days\"];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar monthFirstValue = dataObj[\"monthFirstValue\"];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar monthLastValue = dataObj[\"monthLastValue\"];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar month = dataObj[\"month\"];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar year = dataObj[\"year\"];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar weekdaysList = JSON.stringify(dataObj.weekends);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar weekDaysLength = JSON.parse(weekdaysList);\r\n");
      out.write("\t\t\t\t//alert(\"weekDaysLength..\"+weekDaysLength.length);\r\n");
      out.write("\t\t\t\t/*first week end data*/\r\n");
      out.write("\t\t\t\tvar firstWeekList = JSON.stringify(dataObj.weekends[0]);\r\n");
      out.write("\t\t\t\tfirstWeekList = firstWeekList.substring(1,\r\n");
      out.write("\t\t\t\t\t\tfirstWeekList.length - 1);\r\n");
      out.write("\t\t\t\tvar firstWeekMinValue;\r\n");
      out.write("\t\t\t\tvar firstWeekMaxValue;\r\n");
      out.write("\t\t\t\tvar firstResult = firstWeekList.split(\",\");\r\n");
      out.write("\t\t\t\tif (firstResult.length == 1) {\r\n");
      out.write("\t\t\t\t\tfor ( var i = 0; i < firstResult.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tfirstWeekMinValue = firstResult[0];\r\n");
      out.write("\t\t\t\t\t\tfirstWeekMaxValue = firstResult[0];\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tfor ( var i = 0; i < firstResult.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tfirstWeekMinValue = firstResult[0];\r\n");
      out.write("\t\t\t\t\t\tfirstWeekMaxValue = firstResult[1];\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*second week end data*/\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar secondWeekList = JSON.stringify(dataObj.weekends[1]);\r\n");
      out.write("\t\t\t\tsecondWeekList = secondWeekList.substring(1,\r\n");
      out.write("\t\t\t\t\t\tsecondWeekList.length - 1);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar secondWeekMinValue;\r\n");
      out.write("\t\t\t\tvar secondWeekMaxValue;\r\n");
      out.write("\t\t\t\tvar secondResult = secondWeekList.split(\",\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tfor ( var j = 0; j < secondResult.length; j++) {\r\n");
      out.write("\t\t\t\t\tsecondWeekMinValue = secondResult[0];\r\n");
      out.write("\t\t\t\t\tsecondWeekMaxValue = secondResult[1];\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*third week end data*/\r\n");
      out.write("\t\t\t\tvar thirdWeekList = JSON.stringify(dataObj.weekends[2]);\r\n");
      out.write("\t\t\t\tthirdWeekList = thirdWeekList.substring(1,\r\n");
      out.write("\t\t\t\t\t\tthirdWeekList.length - 1);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar thirdWeekMinValue;\r\n");
      out.write("\t\t\t\tvar thirdWeekMaxValue;\r\n");
      out.write("\t\t\t\tvar thirdResult = thirdWeekList.split(\",\");\r\n");
      out.write("\t\t\t\tfor (i = 0; i < thirdResult.length; i++) {\r\n");
      out.write("\t\t\t\t\tthirdWeekMinValue = thirdResult[0];\r\n");
      out.write("\t\t\t\t\tthirdWeekMaxValue = thirdResult[1];\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*fourth week end data*/\r\n");
      out.write("\t\t\t\tvar fourthWeekList = JSON.stringify(dataObj.weekends[3]);\r\n");
      out.write("\t\t\t\tfourthWeekList = fourthWeekList.substring(1,\r\n");
      out.write("\t\t\t\t\t\tfourthWeekList.length - 1);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar fourthWeekMinValue;\r\n");
      out.write("\t\t\t\tvar fourthWeekMaxValue;\r\n");
      out.write("\t\t\t\tvar fourthResult = fourthWeekList.split(\",\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tfor (i = 0; i < fourthResult.length; i++) {\r\n");
      out.write("\t\t\t\t\tfourthWeekMinValue = fourthResult[0];\r\n");
      out.write("\t\t\t\t\tfourthWeekMaxValue = fourthResult[1];\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t/*fifth week end data*/\r\n");
      out.write("\t\t\t\tif (weekDaysLength.length > 4) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar fifthWeekList = JSON.stringify(dataObj.weekends[4]);\r\n");
      out.write("\t\t\t\t\tfifthWeekList = fifthWeekList.substring(1,\r\n");
      out.write("\t\t\t\t\t\t\tfifthWeekList.length - 1);\r\n");
      out.write("\t\t\t\t\tvar fifthWeekMinValue;\r\n");
      out.write("\t\t\t\t\tvar fifthWeekMaxValue;\r\n");
      out.write("\t\t\t\t\tvar fifthResult = fifthWeekList.split(\",\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tfor (i = 0; i < fifthResult.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tfifthWeekMinValue = fifthResult[0];\r\n");
      out.write("\t\t\t\t\t\tfifthWeekMaxValue = fifthResult[1];\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t/*preparing holidays list*/\r\n");
      out.write("\t\t\t\tvar holidaysList = JSON.stringify(dataObj.holidays[0]);\r\n");
      out.write("\t\t\t\tholidaysList = holidaysList.substring(1,\r\n");
      out.write("\t\t\t\t\t\tholidaysList.length - 1);\r\n");
      out.write("\t\t\t\tvar holidaysMinValue;\r\n");
      out.write("\t\t\t\tvar holidaysMaxValue;\r\n");
      out.write("\t\t\t\tvar Result = holidaysList.split(\",\");\r\n");
      out.write("\t\t\t\tfor (i = 0; i < Result.length; i++) {\r\n");
      out.write("\t\t\t\t\tholidaysMinValue = Result[1];\r\n");
      out.write("\t\t\t\t\tholidaysMaxValue = Result[2];\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*this is for adding 5th plot bands*/\r\n");
      out.write("\t\t\t\t$('document')\r\n");
      out.write("\t\t\t\t\t\t.ready(\r\n");
      out.write("\t\t\t\t\t\t\t\tfunction() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar chart = $('#container').highcharts();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (weekDaysLength.length == 5) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t//chart.xAxis[0].removePlotBand('fifthWeek');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tchart.xAxis[0]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t.addPlotBand({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(255,204,255,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfrom : fifthWeekMinValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tto : fifthWeekMaxValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tzIndex : 2,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlabel : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor : '#000',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont : 'bold 12px Trebuchet MS, Verdana, sans-serif'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext : 'Weekend',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\trotation : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextAlign : 'center'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tid : 'fifthWeek'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t/* market Price data*/\r\n");
      out.write("\t\t\t\tvar marketpriceObj = JSON\r\n");
      out.write("\t\t\t\t\t\t.stringify(obj[8].marketPriceChartData);\r\n");
      out.write("\t\t\t\tvar marketPriceData = JSON.parse(marketpriceObj);\r\n");
      out.write("\t\t\t\tmarketPrice = marketPriceData;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$('#container')\r\n");
      out.write("\t\t\t\t\t\t.highcharts(\r\n");
      out.write("\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\tchart : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\twidth : 1700,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tbackgroundColor : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlinearGradient : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tx1 : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ty1 : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tx2 : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ty2 : 1\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstops : [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 0, 'rgb(255, 255, 255)' ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 1, 'rgb(240, 240, 255)' ] ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tborderWidth : 2,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplotBackgroundColor : 'rgba(255, 255, 255, .9)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplotShadow : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplotBorderWidth : 1,\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttext : 'Position(LongTerm)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfontWeight : 'bold',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfontFamily : 'Verdana',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsubtitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t//text : 'Source: WorldClimate.com'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tlegend : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : 'Legend'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlayout : 'vertical',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\talign : 'right',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tverticalAlign : 'top',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ty : 50,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tpadding : 3,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\titemMarginTop : 5,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\titemMarginBottom : 5,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\titemStyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfontSize : '10px',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfontFamily : 'Verdana',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\txAxis : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tgridLineWidth : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : 'Day Of Month',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : '#140718',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfontWeight : 'bold',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfontSize : '10px',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfontFamily : 'Verdana',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype : \"datetime\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdateTimeLabelFormats : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tday : '%e',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttickInterval : 24 * 3600 * 1000,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t//min : monthFirstValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmax : monthLastValue,\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplotBands : [ { // mark the Holiday\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(255,204,153,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfrom : holidaysMinValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tto : holidaysMaxValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tzIndex : 3,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlabel : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcolor : '#000',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight : 'bold',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize : '10px',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily : 'Verdana',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttext : 'Holiday',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\trotation : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttextAlign : 'center'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}, { // mark the first weekend\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(255,204,255,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfrom : firstWeekMinValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tto : firstWeekMaxValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tzIndex : 3,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlabel : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcolor : '#000',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight : 'bold',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize : '10px',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily : 'Verdana',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttext : 'Weekend',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\trotation : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttextAlign : 'center'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}, { // mark the second weekend\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(255,204,255,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfrom : secondWeekMinValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tto : secondWeekMaxValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tzIndex : 3,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlabel : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcolor : '#000',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight : 'bold',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize : '10px',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily : 'Verdana',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttext : 'Weekend',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\trotation : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttextAlign : 'center'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}, { // mark the third weekend\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(255,204,255,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfrom : thirdWeekMinValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tto : thirdWeekMaxValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tzIndex : 3,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlabel : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcolor : '#000',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight : 'bold',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize : '10px',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily : 'Verdana',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttext : 'Weekend',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\trotation : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttextAlign : 'center'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}, { // mark the fourth weekend\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(255,204,255,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfrom : fourthWeekMinValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tto : fourthWeekMaxValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tzIndex : 3,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlabel : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcolor : '#000',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight : 'bold',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize : '10px',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily : 'Verdana',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttext : 'Weekend',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\trotation : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttextAlign : 'center'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\tyAxis : [ { // Primary yAxis\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tgridLineWidth : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tminorGridLineColor : '#F0F0F0',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tminorTickInterval : 'auto',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlabels : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tformat : '{value}',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : '#140718'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : 'Megawatts',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : '#140718',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfontWeight : 'bold',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfontSize : '10px',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfontFamily : 'Verdana',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmin : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t//max : 7500,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttickInterval : 500,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfontWeight : 'bold',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfontSize : '10px',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tfontFamily : 'Verdana',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} ],\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttooltip : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t/* shared : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvaluePrefix : '$',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfontSize : '10px',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tfontFamily : 'Verdana',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t */ formatter: function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t//alert(1372636800000-(-2208988800000));\r\n");
      out.write("\t\t\t\t\t\t\t                    return  '<b>' + this.series.name +'</b><br/>' +\r\n");
      out.write("\t\t\t\t\t\t                        Highcharts.dateFormat(1372636800000-(-2208988800000))+ this.y ;\r\n");
      out.write("\t\t\t\t\t\t                }\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplotOptions : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tarearange : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstates : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\thover : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tenabled : false,\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tseries : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcursor : 'pointer',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tpoint : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tevents : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tclick : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t// alert ('DayOfMonth: '+ this.x +', Megawats: '+ this.y);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tdayAhead(this.x, this.y);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t/* bar chart designing*/\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcolumn : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tborderColor : 'rgba(132,132,132,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tshadow : false,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstates : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\thover : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tcolor : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tlinearGradient : [ 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0, 0, 300 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tstops : [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[ 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgb(255,255,255)' ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[ 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'rgb(159,49,49)' ] ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstacking : 'normal',\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t/*Line design*/\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tline : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlineWidth : 4,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstates : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\thover : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlineWidth : 5\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmarker : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tenabled : false\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tseries : [\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname : 'Standard Deviations',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdata : ranges,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'arearange',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlineWidth : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(135,206,250,0.8)',\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'column',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname : 'Available Demand Response ',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tshowInLegend : availableBoolValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdata : availableDemandStackBar,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(132,132,132,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tpointWidth : 35,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcursor : 'pointer',\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'column',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname : 'Scheduled Demand Response ',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tshowInLegend : scheduledBoolValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdata : scheduledDemandStackBar,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(45,45,45,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tpointWidth : 35,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcursor : 'pointer',\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'column',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname : 'Proposed Position ',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tshowInLegend : proposedBoolValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdata : proposedStackBar,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(134, 153, 75,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tpointWidth : 35,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcursor : 'pointer',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'column',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname : 'Hedged Position ',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tshowInLegend : hedgedBoolValue,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdata : hedgedStackBar,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(90, 102, 50,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tpointWidth : 35,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcursor : 'pointer',\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'line',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname : 'Normalized Target',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdata : averages,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(41,8,138,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlineWidth : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tzIndex : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tmarker : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfillColor : 'white',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlineWidth : 2,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlineColor : Highcharts\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.getOptions().colors[0]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'line',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname : 'Backcast',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdata : line,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlineWidth : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(128,0,0,0.8)',\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname : 'Market Price',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdata : marketPrice,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(90, 102, 50,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlineColor : 'transperent',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tmarker : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlineWidth : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlineColor : 'transperent',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tenabled : false,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tradius : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdataLabels : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tenabled : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tformatter : function(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarketPrice) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn '$ ' + this.y;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor : '#333',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight : 'bold',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize : '10px',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily : 'bold Verdana',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} ]\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\talert('Something went wrong...');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction dayAheadhandler(msg, textStatus, jqXHR) {\r\n");
      out.write("\t\tvar status = jqXHR.status;\r\n");
      out.write("\t\t//alert(\"status \" + status);\r\n");
      out.write("\t\tif (status == 200) {\r\n");
      out.write("\t\t\t//alert(\"messages in handler class \" + msg);\r\n");
      out.write("\t\t\tdocument.getElementById('json').value = msg;\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(function() {\r\n");
      out.write("\t\t\t\tvar jsonVal = document.getElementById('json').value;\r\n");
      out.write("\t\t\t\t//alert(jsonVal);\r\n");
      out.write("\t\t\t\tvar obj = JSON.parse(jsonVal);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*line data*/\r\n");
      out.write("\t\t\t\tvar lineObj = JSON.stringify(obj[0].lineChartData);\r\n");
      out.write("\t\t\t\tvar lineData = JSON.parse(lineObj);\r\n");
      out.write("\t\t\t\tline = lineData;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*stack1 data*/\r\n");
      out.write("\t\t\t\tvar stack1Obj = JSON.stringify(obj[1].Position1ChartData);\r\n");
      out.write("\t\t\t\tvar stack1Data = JSON.parse(stack1Obj);\r\n");
      out.write("\t\t\t\tStack1 = stack1Data;\r\n");
      out.write("\t\t\t\t//alert(Stack1);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*stack2 data*/\r\n");
      out.write("\t\t\t\tvar stack2Obj = JSON.stringify(obj[2].Position2ChartData);\r\n");
      out.write("\t\t\t\tvar stack2Data = JSON.parse(stack2Obj);\r\n");
      out.write("\t\t\t\tStack2 = stack2Data;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*averages data*/\r\n");
      out.write("\t\t\t\tvar averagesObj = JSON.stringify(obj[3].averagesChartData);\r\n");
      out.write("\t\t\t\tvar averagesData = JSON.parse(averagesObj);\r\n");
      out.write("\t\t\t\taverages = averagesData;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*ranges data*/\r\n");
      out.write("\t\t\t\tvar rangesObj = JSON.stringify(obj[4].rangesChartData);\r\n");
      out.write("\t\t\t\tvar rangesData = JSON.parse(rangesObj);\r\n");
      out.write("\t\t\t\tranges = rangesData;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t/*display date data*/\r\n");
      out.write("\t\t\t\tvar dayFirstHourValueObj = JSON\r\n");
      out.write("\t\t\t\t\t\t.stringify(obj[5].dayFirstHourValue);\r\n");
      out.write("\t\t\t\t//alert(dayFirstHourValueObj);\r\n");
      out.write("\t\t\t\tvar FirstHour = eval(\"(\" + dayFirstHourValueObj + \")\");\r\n");
      out.write("\t\t\t\tvar dayFirstHour = FirstHour.dayFirstHourValue;\r\n");
      out.write("\t\t\t\t//alert(dayFirstHour); \r\n");
      out.write("\t\t\t\tvar date = new Date(Number(dayFirstHour));\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar displayDate = 'Position( ' + date.toString(\"MMM dd\")\r\n");
      out.write("\t\t\t\t\t\t+ ' / RealTime )';\r\n");
      out.write("\t\t\t\t//alert(displayDate);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$('#container')\r\n");
      out.write("\t\t\t\t\t\t.highcharts(\r\n");
      out.write("\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\tchart : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tbackgroundColor : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlinearGradient : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tx1 : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ty1 : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tx2 : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ty2 : 1\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstops : [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 0, 'rgb(255, 255, 255)' ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 1, 'rgb(240, 240, 255)' ] ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tborderWidth : 2,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplotBackgroundColor : 'rgba(255, 255, 255, .9)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplotShadow : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplotBorderWidth : 1\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttext : displayDate,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tsubtitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t//text : 'Source: WorldClimate.com'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tlegend : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : 'Legend'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlayout : 'vertical',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\talign : 'right',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tverticalAlign : 'top',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ty : 50,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tpadding : 3,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\titemMarginTop : 5,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\titemMarginBottom : 5,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\titemStyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlineHeight : '14px'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\txAxis : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tgridLineWidth : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlineColor : '#000',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttickColor : '#000',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : 'Hourly Interval',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : '#140718'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype : 'datetime',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttickInterval : 3600 * 1000\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tyAxis : [ { // Primary yAxis\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tgridLineWidth : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tminorGridLineColor : '#F0F0F0',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tminorTickInterval : 'auto',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlineColor : '#000',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlineWidth : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttickColor : '#000',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tlabels : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tformat : '{value}',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : '#140718'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttext : 'Megawatts',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstyle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : '#140718'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmin : 50,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmax : 450,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttickInterval : 50\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} ],\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttooltip : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tshared : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvalueSuffix : 'MW'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tplotOptions : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcolumn : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstacking : 'normal',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tline : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tlineWidth : 4,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tstates : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\thover : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlineWidth : 5\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tmarker : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tenabled : false\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\tseries : [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname : 'Standard Deviation',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdata : ranges,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'arearange',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlineWidth : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(135,206,250,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'column',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname : 'Proposed RT Position',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdata : Stack1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(0, 100, 0,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tpointWidth : 27,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcursor : 'pointer',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'line',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname : 'Normalized Target',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : 'rgba(41,8,138,0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdata : averages,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlineWidth : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tzIndex : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tmarker : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfillColor : 'white',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlineWidth : 2,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tlineColor : Highcharts\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.getOptions().colors[0]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype : 'line',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname : 'Back Cast',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tdata : line,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tlineWidth : 1,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tcolor : 'maroon',\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\talert('Something went wrong...');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"show()\">\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t<input type=\"hidden\" id=\"json\" />\r\n");
      out.write("\t<script src=\"js/highcharts.js\"></script>\r\n");
      out.write("\t<script src=\"js/highcharts-more.js\"></script>\r\n");
      out.write("\t<script src=\"js/exporting.js\"></script>\r\n");
      out.write("\t<div id=\"container\"\r\n");
      out.write("\t\tstyle=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
